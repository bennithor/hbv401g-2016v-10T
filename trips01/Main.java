/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trips01;

import java.awt.CardLayout;
import java.io.IOException;
import java.text.ParseException;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
	TripLogic logic = new TripLogic();
    

    
    public Main() {
        initComponents();
        
        emptyTable = HotelsTable;
        emptyTable2 = DayToursTable;
        emptyTable3 = flightTable;
    
       
        
        
      
        
        
        
        setTitle("BookyBook"); 

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        bookPanel = new javax.swing.JPanel();
        bookPanelContainer = new javax.swing.JLayeredPane();
        SearchQ = new javax.swing.JLabel();
        Flights = new javax.swing.JLabel();
        Hotels = new javax.swing.JLabel();
        DayTours = new javax.swing.JLabel();
        FlightCheckbox = new javax.swing.JCheckBox();
        HotelCheckbox = new javax.swing.JCheckBox();
        DayToursCheckbox = new javax.swing.JCheckBox();
        contButton1 = new javax.swing.JButton();
        hotelPanel = new javax.swing.JPanel();
        hotelLabel = new javax.swing.JLabel();
        hotelContButton = new javax.swing.JButton();
        hotelBackButton = new javax.swing.JButton();
        hotelsContainer1 = new javax.swing.JLayeredPane();
        arrivalDateLabel = new javax.swing.JLabel();
        arrivalDate = new javax.swing.JTextField();
        nightsLabel = new javax.swing.JLabel();
        nights = new javax.swing.JComboBox();
        locationLabel = new javax.swing.JLabel();
        hotelLocation = new javax.swing.JTextField();
        hotelNameLabel = new javax.swing.JLabel();
        hotelName = new javax.swing.JTextField();
        starsLabel = new javax.swing.JLabel();
        stars = new javax.swing.JComboBox();
        priceLabel = new javax.swing.JLabel();
        maxPrice = new javax.swing.JTextField();
        hotelsContainer2 = new javax.swing.JLayeredPane();
        selectLabel = new javax.swing.JLabel();
        onePers = new javax.swing.JComboBox();
        twoPers = new javax.swing.JComboBox();
        threePers = new javax.swing.JComboBox();
        fourPers = new javax.swing.JComboBox();
        onePersLabel = new javax.swing.JLabel();
        twoPersLabel = new javax.swing.JLabel();
        threePersLabel = new javax.swing.JLabel();
        fourPersLabel = new javax.swing.JLabel();
        hotelSearchButton = new javax.swing.JButton();
        hotelsScrollPane = new javax.swing.JScrollPane();
        HotelsTable = new javax.swing.JTable();
        dayToursPanel = new javax.swing.JPanel();
        dayToursLabel = new javax.swing.JLabel();
        dayToursContButton = new javax.swing.JButton();
        dayToursContainer1 = new javax.swing.JLayeredPane();
        AgeRadioButton = new javax.swing.JRadioButton();
        ageRestriction = new javax.swing.JTextField();
        LocationRadioButton = new javax.swing.JRadioButton();
        dayToursLocation = new javax.swing.JComboBox();
        StarsRadioButton = new javax.swing.JRadioButton();
        minStars = new javax.swing.JComboBox();
        DepartureRadioButton = new javax.swing.JRadioButton();
        dayToursDeparture = new javax.swing.JTextField();
        SeatsRadioButton = new javax.swing.JRadioButton();
        seatsAvailable = new javax.swing.JComboBox();
        PriceRadioButton = new javax.swing.JRadioButton();
        dayToursMinPrice = new javax.swing.JTextField();
        fromTo = new javax.swing.JLabel();
        dayToursMaxPrice = new javax.swing.JTextField();
        dayToursContainer2 = new javax.swing.JLayeredPane();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jRadioButton7 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        DayTourSearchButton = new javax.swing.JButton();
        dayToursScrollPane = new javax.swing.JScrollPane();
        DayToursTable = new javax.swing.JTable();
        dayToursBackButton = new javax.swing.JButton();
        numberOfAdultsLabel = new javax.swing.JLabel();
        numberOfAdults = new javax.swing.JComboBox();
        numberOfChildrenPanel = new javax.swing.JLabel();
        numberOfChildren = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        flightPanel = new javax.swing.JPanel();
        flightLabel = new javax.swing.JLabel();
        contButton4 = new javax.swing.JButton();
        flightsBackButton = new javax.swing.JButton();
        flightContainer = new javax.swing.JLayeredPane();
        flightFromLabel = new javax.swing.JLabel();
        flightTo = new javax.swing.JComboBox();
        flightToLabel = new javax.swing.JLabel();
        flightFrom = new javax.swing.JComboBox();
        flightDateLabel = new javax.swing.JLabel();
        flightDate = new javax.swing.JComboBox();
        flightsPrice = new javax.swing.JLabel();
        flightDash = new javax.swing.JLabel();
        flightsFromPrice = new javax.swing.JComboBox();
        flightsToPrice = new javax.swing.JComboBox();
        flightSearchButton = new javax.swing.JButton();
        flightsScrollPane = new javax.swing.JScrollPane();
        flightTable = new javax.swing.JTable();
        resultsPanel = new javax.swing.JPanel();
        startPageButton = new javax.swing.JButton();
        resultsBackButton = new javax.swing.JButton();
        tripInfoLabel = new javax.swing.JLabel();
        hotelInfoLabel = new javax.swing.JLabel();
        dayTourInfoLabel = new javax.swing.JLabel();
        bookButton = new javax.swing.JButton();
        resultsContainerHotels = new javax.swing.JLayeredPane();
        hotelResultNameLabel = new javax.swing.JLabel();
        hotelResultName = new javax.swing.JTextField();
        hotelResultPostalLabel = new javax.swing.JLabel();
        hotelResultPostal = new javax.swing.JTextField();
        hotelResultStarsLabel = new javax.swing.JLabel();
        hotelResultStars = new javax.swing.JTextField();
        hotelResultDateLabel = new javax.swing.JLabel();
        hotelResultDate = new javax.swing.JTextField();
        hotelResultNumberOfNightsLabel = new javax.swing.JLabel();
        hotelResultNumberOfNights = new javax.swing.JTextField();
        hotelResultNumberOfGuestsLabel = new javax.swing.JLabel();
        hotelResultNumberOfGuests = new javax.swing.JTextField();
        hotelResultNumberOfRoomsLabel = new javax.swing.JLabel();
        hotelResultNumberOfRooms = new javax.swing.JTextField();
        hotelResultPriceLabel = new javax.swing.JLabel();
        hotelResultPrice = new javax.swing.JTextField();
        resultsContainerDayTours = new javax.swing.JLayeredPane();
        dayTourResultNameLabel = new javax.swing.JLabel();
        dayTourResultName = new javax.swing.JTextField();
        dayTourResultLocationLabel = new javax.swing.JLabel();
        dayTourResultLocation = new javax.swing.JTextField();
        dayTourResultDepartureTimeLabel = new javax.swing.JLabel();
        dayTourResultDepartureTime = new javax.swing.JTextField();
        dayTourResultDurationLabel = new javax.swing.JLabel();
        dayTourResultDuration = new javax.swing.JTextField();
        dayTourResultNumberOfSeatsLabel = new javax.swing.JLabel();
        dayTourResultNumberOfSeats = new javax.swing.JTextField();
        dayTourResultPriceLabel = new javax.swing.JLabel();
        dayTourResultPrice = new javax.swing.JTextField();
        resultsContainerFlights = new javax.swing.JLayeredPane();
        flightResultToLabel = new javax.swing.JLabel();
        flightResultTo = new javax.swing.JTextField();
        flightResultFromLabel = new javax.swing.JLabel();
        flightResultFrom = new javax.swing.JTextField();
        flightResultDateLabel = new javax.swing.JLabel();
        flightResultDate = new javax.swing.JTextField();
        flightResultNumberLabel = new javax.swing.JLabel();
        flightResultNumber = new javax.swing.JTextField();
        flightResultPriceLabel = new javax.swing.JLabel();
        flightResultPrice = new javax.swing.JTextField();
        flightInfoLabel = new javax.swing.JLabel();
        bookingNumberPanel = new javax.swing.JPanel();
        bookingNumberLabel = new javax.swing.JLabel();
        bookingNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.CardLayout());

        bookPanel.setBackground(new java.awt.Color(255, 255, 255));
        bookPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        SearchQ.setFont(new java.awt.Font("Microsoft YaHei", 0, 36)); // NOI18N
        SearchQ.setText("What would you like to search for?");

        Flights.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        Flights.setText("Flights");

        Hotels.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        Hotels.setText("Hotels");

        DayTours.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        DayTours.setText("Day Tours");

        FlightCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightCheckboxActionPerformed(evt);
            }
        });

        HotelCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HotelCheckboxActionPerformed(evt);
            }
        });

        DayToursCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayToursCheckboxActionPerformed(evt);
            }
        });

        contButton1.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        contButton1.setText("Continue");
        contButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookPanelContainerLayout = new javax.swing.GroupLayout(bookPanelContainer);
        bookPanelContainer.setLayout(bookPanelContainerLayout);
        bookPanelContainerLayout.setHorizontalGroup(
            bookPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookPanelContainerLayout.createSequentialGroup()
                .addGap(0, 161, Short.MAX_VALUE)
                .addComponent(SearchQ)
                .addGap(160, 160, 160))
            .addGroup(bookPanelContainerLayout.createSequentialGroup()
                .addGroup(bookPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookPanelContainerLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(Flights)
                        .addGap(104, 104, 104)
                        .addComponent(Hotels)
                        .addGap(104, 104, 104)
                        .addComponent(DayTours))
                    .addGroup(bookPanelContainerLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(FlightCheckbox)
                        .addGap(166, 166, 166)
                        .addComponent(HotelCheckbox)
                        .addGap(165, 165, 165)
                        .addComponent(DayToursCheckbox))
                    .addGroup(bookPanelContainerLayout.createSequentialGroup()
                        .addGap(356, 356, 356)
                        .addComponent(contButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookPanelContainerLayout.setVerticalGroup(
            bookPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelContainerLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(SearchQ)
                .addGap(56, 56, 56)
                .addGroup(bookPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Flights)
                    .addComponent(Hotels)
                    .addComponent(DayTours))
                .addGap(46, 46, 46)
                .addGroup(bookPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HotelCheckbox)
                    .addComponent(FlightCheckbox)
                    .addComponent(DayToursCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(contButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        bookPanelContainer.setLayer(SearchQ, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(Flights, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(Hotels, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(DayTours, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(FlightCheckbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(HotelCheckbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(DayToursCheckbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        bookPanelContainer.setLayer(contButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout bookPanelLayout = new javax.swing.GroupLayout(bookPanel);
        bookPanel.setLayout(bookPanelLayout);
        bookPanelLayout.setHorizontalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelLayout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(bookPanelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(654, Short.MAX_VALUE))
        );
        bookPanelLayout.setVerticalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookPanelLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(bookPanelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );

        mainPanel.add(bookPanel, "card12");

        hotelPanel.setBackground(new java.awt.Color(255, 255, 255));
        hotelPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        hotelLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        hotelLabel.setText("Hotels");

        hotelContButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        hotelContButton.setText("Continue");
        hotelContButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelContButtonActionPerformed(evt);
            }
        });

        hotelBackButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        hotelBackButton.setText("Back");
        hotelBackButton.setMaximumSize(new java.awt.Dimension(137, 41));
        hotelBackButton.setMinimumSize(new java.awt.Dimension(137, 41));
        hotelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelBackButtonActionPerformed(evt);
            }
        });

        hotelsContainer1.setLayout(new java.awt.GridLayout(0, 2, 10, 15));

        arrivalDateLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        arrivalDateLabel.setText("Arrival date (yyyymmdd)");
        hotelsContainer1.add(arrivalDateLabel);
        hotelsContainer1.add(arrivalDate);

        nightsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        nightsLabel.setText("Number of nights");
        nightsLabel.setToolTipText("");
        hotelsContainer1.add(nightsLabel);

        nights.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14" }));
        nights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nightsActionPerformed(evt);
            }
        });
        hotelsContainer1.add(nights);

        locationLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        locationLabel.setText("Hotel location");
        hotelsContainer1.add(locationLabel);

        hotelLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelLocationActionPerformed(evt);
            }
        });
        hotelsContainer1.add(hotelLocation);

        hotelNameLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelNameLabel.setText("Hotel name");
        hotelsContainer1.add(hotelNameLabel);
        hotelsContainer1.add(hotelName);

        starsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        starsLabel.setText("Minimum stars");
        hotelsContainer1.add(starsLabel);

        stars.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "1", "2", "3", "4", "5" }));
        hotelsContainer1.add(stars);

        priceLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        priceLabel.setText("Maximum price");
        priceLabel.setMaximumSize(new java.awt.Dimension(119, 19));
        priceLabel.setMinimumSize(new java.awt.Dimension(119, 19));
        priceLabel.setPreferredSize(new java.awt.Dimension(119, 19));
        hotelsContainer1.add(priceLabel);

        maxPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxPriceActionPerformed(evt);
            }
        });
        hotelsContainer1.add(maxPrice);

        selectLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        selectLabel.setText("Please select the number of rooms of each type you wish to book:");

        onePers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        twoPers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", " " }));

        threePers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        fourPers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        onePersLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        onePersLabel.setText("1 pers");

        twoPersLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        twoPersLabel.setText("2 pers");

        threePersLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        threePersLabel.setText("3 pers");

        fourPersLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        fourPersLabel.setText("4 pers");

        javax.swing.GroupLayout hotelsContainer2Layout = new javax.swing.GroupLayout(hotelsContainer2);
        hotelsContainer2.setLayout(hotelsContainer2Layout);
        hotelsContainer2Layout.setHorizontalGroup(
            hotelsContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hotelsContainer2Layout.createSequentialGroup()
                .addComponent(selectLabel)
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelsContainer2Layout.createSequentialGroup()
                .addComponent(onePersLabel)
                .addGap(18, 18, 18)
                .addComponent(onePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(twoPersLabel)
                .addGap(18, 18, 18)
                .addComponent(threePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(threePersLabel)
                .addGap(18, 18, 18)
                .addComponent(twoPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fourPersLabel)
                .addGap(18, 18, 18)
                .addComponent(fourPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        hotelsContainer2Layout.setVerticalGroup(
            hotelsContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hotelsContainer2Layout.createSequentialGroup()
                .addComponent(selectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(hotelsContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(twoPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fourPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onePersLabel)
                    .addComponent(twoPersLabel)
                    .addComponent(threePersLabel)
                    .addComponent(fourPersLabel))
                .addGap(25, 25, 25))
        );
        hotelsContainer2.setLayer(selectLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(onePers, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(twoPers, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(threePers, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(fourPers, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(onePersLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(twoPersLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(threePersLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hotelsContainer2.setLayer(fourPersLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        hotelSearchButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        hotelSearchButton.setText("Search");
        hotelSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					hotelSearchButtonActionPerformed(evt);
				} catch (NumberFormatException | ParseException | IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        HotelsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Stars", "Price", "PostalCode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hotelsScrollPane.setViewportView(HotelsTable);

        javax.swing.GroupLayout hotelPanelLayout = new javax.swing.GroupLayout(hotelPanel);
        hotelPanel.setLayout(hotelPanelLayout);
        hotelPanelLayout.setHorizontalGroup(
            hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hotelPanelLayout.createSequentialGroup()
                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hotelPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(hotelLabel))
                    .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, hotelPanelLayout.createSequentialGroup()
                            .addGap(75, 75, 75)
                            .addComponent(hotelBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hotelContButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, hotelPanelLayout.createSequentialGroup()
                            .addGap(91, 91, 91)
                            .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(hotelSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hotelsContainer1)
                                    .addComponent(hotelsContainer2)))
                            .addGap(131, 131, 131)
                            .addComponent(hotelsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(68, 760, Short.MAX_VALUE))
        );
        hotelPanelLayout.setVerticalGroup(
            hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hotelLabel)
                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hotelPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(hotelsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hotelContButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(hotelPanelLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(hotelsContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hotelsContainer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hotelSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        hotelContButton.getAccessibleContext().setAccessibleDescription("");

        mainPanel.add(hotelPanel, "card11");

        dayToursPanel.setBackground(new java.awt.Color(255, 255, 255));
        dayToursPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        dayToursLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        dayToursLabel.setText(" DayTours");

        dayToursContButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        dayToursContButton.setText("Continue");
        dayToursContButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayToursContButtonActionPerformed(evt);
            }
        });

        dayToursContainer1.setLayout(new java.awt.GridLayout(0, 2, 10, 15));

        AgeRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(AgeRadioButton);
        AgeRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        AgeRadioButton.setText("Age restriction ( years )");
        AgeRadioButton.setMaximumSize(new java.awt.Dimension(83, 27));
        AgeRadioButton.setMinimumSize(new java.awt.Dimension(83, 27));
        AgeRadioButton.setOpaque(false);
        AgeRadioButton.setPreferredSize(new java.awt.Dimension(83, 27));
        AgeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeRadioButtonActionPerformed(evt);
            }
        });
        dayToursContainer1.add(AgeRadioButton);

        ageRestriction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageRestrictionActionPerformed(evt);
            }
        });
        dayToursContainer1.add(ageRestriction);

        LocationRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(LocationRadioButton);
        LocationRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        LocationRadioButton.setText("Location");
        dayToursContainer1.add(LocationRadioButton);

        dayToursLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "S", "N", "E", "W", "NE", "NW", "SE", "SW" }));
        dayToursContainer1.add(dayToursLocation);

        StarsRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(StarsRadioButton);
        StarsRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        StarsRadioButton.setText("Minimum star rating");
        dayToursContainer1.add(StarsRadioButton);

        minStars.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        dayToursContainer1.add(minStars);

        DepartureRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(DepartureRadioButton);
        DepartureRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        DepartureRadioButton.setText("Departure time ( hh:mm )");
        dayToursContainer1.add(DepartureRadioButton);
        dayToursContainer1.add(dayToursDeparture);

        SeatsRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(SeatsRadioButton);
        SeatsRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        SeatsRadioButton.setText("Number of seats available");
        dayToursContainer1.add(SeatsRadioButton);

        seatsAvailable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));
        dayToursContainer1.add(seatsAvailable);

        PriceRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(PriceRadioButton);
        PriceRadioButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        PriceRadioButton.setText("Price ( ISK )");
        PriceRadioButton.setMaximumSize(new java.awt.Dimension(83, 27));
        PriceRadioButton.setMinimumSize(new java.awt.Dimension(83, 27));
        PriceRadioButton.setOpaque(false);
        PriceRadioButton.setPreferredSize(new java.awt.Dimension(83, 27));
        PriceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceRadioButtonActionPerformed(evt);
            }
        });

        fromTo.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        fromTo.setText("-");

        jCheckBox4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("Thu");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox5.setText("Fri");

        jCheckBox6.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox6.setText("Sat");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox7.setText("Sun");

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Wed");

        jRadioButton7.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jRadioButton7.setText("Days of week");

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Mon");

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Tue");

        javax.swing.GroupLayout dayToursContainer2Layout = new javax.swing.GroupLayout(dayToursContainer2);
        dayToursContainer2.setLayout(dayToursContainer2Layout);
        dayToursContainer2Layout.setHorizontalGroup(
            dayToursContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayToursContainer2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jCheckBox1)
                .addGap(50, 50, 50)
                .addComponent(jCheckBox2)
                .addGap(50, 50, 50)
                .addComponent(jCheckBox3)
                .addGap(50, 50, 50)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jCheckBox5)
                .addGap(50, 50, 50)
                .addComponent(jCheckBox6)
                .addGap(50, 50, 50)
                .addComponent(jCheckBox7)
                .addContainerGap())
            .addGroup(dayToursContainer2Layout.createSequentialGroup()
                .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dayToursContainer2Layout.setVerticalGroup(
            dayToursContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dayToursContainer2Layout.createSequentialGroup()
                .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(dayToursContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addGap(36, 36, 36))
        );
        dayToursContainer2.setLayer(jCheckBox4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jRadioButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dayToursContainer2.setLayer(jCheckBox2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DayTourSearchButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        DayTourSearchButton.setText("Search");
        DayTourSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayTourSearchButtonActionPerformed(evt);
            }
        });

        DayToursTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Duration", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dayToursScrollPane.setViewportView(DayToursTable);

        dayToursBackButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        dayToursBackButton.setText("Back");
        dayToursBackButton.setMaximumSize(new java.awt.Dimension(137, 41));
        dayToursBackButton.setMinimumSize(new java.awt.Dimension(137, 41));
        dayToursBackButton.setPreferredSize(new java.awt.Dimension(137, 41));
        dayToursBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayToursBackButtonActionPerformed(evt);
            }
        });

        numberOfAdultsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        numberOfAdultsLabel.setText("Number of adults");

        numberOfAdults.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));
        numberOfAdults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfAdultsActionPerformed(evt);
            }
        });

        numberOfChildrenPanel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        numberOfChildrenPanel.setText("Number of children");

        numberOfChildren.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 0, 20)); // NOI18N
        jLabel3.setText("Search by:");

        javax.swing.GroupLayout dayToursPanelLayout = new javax.swing.GroupLayout(dayToursPanel);
        dayToursPanel.setLayout(dayToursPanelLayout);
        dayToursPanelLayout.setHorizontalGroup(
            dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dayToursPanelLayout.createSequentialGroup()
                .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dayToursPanelLayout.createSequentialGroup()
                        .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DayTourSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(dayToursPanelLayout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addComponent(dayToursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(dayToursPanelLayout.createSequentialGroup()
                                    .addGap(91, 91, 91)
                                    .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dayToursContainer1)
                                        .addComponent(dayToursContainer2)))
                                .addGroup(dayToursPanelLayout.createSequentialGroup()
                                    .addGap(91, 91, 91)
                                    .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(dayToursPanelLayout.createSequentialGroup()
                                            .addComponent(PriceRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(12, 12, 12)
                                            .addComponent(dayToursMinPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(fromTo, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(dayToursMaxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(dayToursPanelLayout.createSequentialGroup()
                                                .addComponent(numberOfChildrenPanel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(numberOfChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(dayToursPanelLayout.createSequentialGroup()
                                                .addComponent(numberOfAdultsLabel)
                                                .addGap(47, 47, 47)
                                                .addComponent(numberOfAdults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel3)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 664, Short.MAX_VALUE)
                        .addComponent(dayToursScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dayToursPanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(dayToursBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dayToursContButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
        dayToursPanelLayout.setVerticalGroup(
            dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayToursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayToursLabel)
                .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dayToursPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfAdultsLabel)
                            .addComponent(numberOfAdults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfChildrenPanel)
                            .addComponent(numberOfChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayToursMinPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fromTo)
                            .addComponent(dayToursMaxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayToursContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayToursContainer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DayTourSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dayToursPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(dayToursScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(dayToursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayToursContButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayToursBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        mainPanel.add(dayToursPanel, "card12");

        flightPanel.setBackground(new java.awt.Color(255, 255, 255));
        flightPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        flightLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        flightLabel.setText("Flights ");

        contButton4.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        contButton4.setText("Continue");
        contButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contButton4ActionPerformed(evt);
            }
        });

        flightsBackButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        flightsBackButton.setText("Back");
        flightsBackButton.setPreferredSize(new java.awt.Dimension(137, 41));
        flightsBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightsBackButtonActionPerformed(evt);
            }
        });

        flightContainer.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        flightFromLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightFromLabel.setText("From");
        flightContainer.add(flightFromLabel);

        flightTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KEFLAVIK" }));
        flightContainer.add(flightTo);

        flightToLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightToLabel.setText("To");
        flightContainer.add(flightToLabel);

        flightFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PARIS CDG", "Berlin Schoenefeld", "London Gatwick", "Copenhagen", "Munich", "Zurich", "Frankfurt", "Helsinki", "Glasgow", "Stockholm", "London Heathrow", "Brussels", "Amsterdam", "Oslo", "Alicante", "London Luton", "Basel Mulhouse", "Boston", "Baltimore Washington", "Denver", "Washington Dulles", "New York Newark", "Seattle", "New York JFK", "Orlando", "Edinburgh" }));
        flightContainer.add(flightFrom);

        flightDateLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightDateLabel.setText("Date");
        flightContainer.add(flightDateLabel);

        flightDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "19. april" }));
        flightContainer.add(flightDate);

        flightsPrice.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightsPrice.setText("Price ( ISK )");

        flightDash.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightDash.setText("-");

        flightsFromPrice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10000", "20000", "30000", "40000", "50000", "60000", "70000", "80000", "90000" }));
        flightsFromPrice.setMinimumSize(new java.awt.Dimension(61, 20));
        flightsFromPrice.setPreferredSize(new java.awt.Dimension(61, 20));

        flightsToPrice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10000", "20000", "30000", "40000", "50000", "60000", "70000", "80000", "90000", "100000" }));
        flightsToPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightsToPriceActionPerformed(evt);
            }
        });

        flightSearchButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        flightSearchButton.setText("Search");
        flightSearchButton.setPreferredSize(new java.awt.Dimension(137, 41));
        flightSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightSearchButtonActionPerformed(evt);
            }
        });
        
        flightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Flight No", "From", "To", "Date", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        flightsScrollPane.setViewportView(flightTable);
        if (flightTable.getColumnModel().getColumnCount() > 0) {
            flightTable.getColumnModel().getColumn(0).setResizable(false);
            flightTable.getColumnModel().getColumn(1).setResizable(false);
            flightTable.getColumnModel().getColumn(2).setResizable(false);
            flightTable.getColumnModel().getColumn(3).setResizable(false);
            flightTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout flightPanelLayout = new javax.swing.GroupLayout(flightPanel);
        flightPanel.setLayout(flightPanelLayout);
        flightPanelLayout.setHorizontalGroup(
            flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightPanelLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightPanelLayout.createSequentialGroup()
                                .addComponent(flightsPrice)
                                .addGap(32, 32, 32)
                                .addComponent(flightsFromPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flightDash, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flightsToPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(flightContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightPanelLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(flightSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 793, Short.MAX_VALUE)
                        .addComponent(flightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addComponent(flightsBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contButton4)))
                .addGap(274, 274, 274))
            .addGroup(flightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        flightPanelLayout.setVerticalGroup(
            flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightLabel)
                .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(flightContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(flightsPrice)
                            .addComponent(flightDash)
                            .addComponent(flightsFromPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightsToPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(flightSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(flightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightsBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contButton4))
                .addGap(47, 47, 47))
        );

        mainPanel.add(flightPanel, "card10");

        resultsPanel.setBackground(new java.awt.Color(255, 255, 255));
        resultsPanel.setMaximumSize(new java.awt.Dimension(1280, 720));
        resultsPanel.setMinimumSize(new java.awt.Dimension(1280, 720));
        resultsPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        startPageButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        startPageButton.setText("Restart process");
        startPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPageButtonActionPerformed(evt);
            }
        });

        resultsBackButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        resultsBackButton.setText("Back");
        resultsBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsBackButtonActionPerformed(evt);
            }
        });

        tripInfoLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        tripInfoLabel.setText("Your Trip Information");

        hotelInfoLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 20)); // NOI18N
        hotelInfoLabel.setText("Hotel information");

        dayTourInfoLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 20)); // NOI18N
        dayTourInfoLabel.setText("Daytour information");

        bookButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 36)); // NOI18N
        bookButton.setText("Book trip");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					bookButtonActionPerformed(evt);
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        resultsContainerHotels.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        hotelResultNameLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultNameLabel.setText("Name");
        resultsContainerHotels.add(hotelResultNameLabel);

        hotelResultName.setEditable(false);
        hotelResultName.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultName.setFocusable(false);
        resultsContainerHotels.add(hotelResultName);

        hotelResultPostalLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultPostalLabel.setText("Postal code");
        resultsContainerHotels.add(hotelResultPostalLabel);

        hotelResultPostal.setEditable(false);
        hotelResultPostal.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultPostal.setFocusable(false);
        resultsContainerHotels.add(hotelResultPostal);

        hotelResultStarsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultStarsLabel.setText("Stars");
        resultsContainerHotels.add(hotelResultStarsLabel);

        hotelResultStars.setEditable(false);
        hotelResultStars.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultStars.setFocusable(false);
        hotelResultStars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelResultStarsActionPerformed(evt);
            }
        });
        resultsContainerHotels.add(hotelResultStars);

        hotelResultDateLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultDateLabel.setText("Arrival date");
        resultsContainerHotels.add(hotelResultDateLabel);

        hotelResultDate.setEditable(false);
        hotelResultDate.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultDate.setFocusable(false);
        resultsContainerHotels.add(hotelResultDate);

        hotelResultNumberOfNightsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultNumberOfNightsLabel.setText("Number of nights");
        resultsContainerHotels.add(hotelResultNumberOfNightsLabel);

        hotelResultNumberOfNights.setEditable(false);
        hotelResultNumberOfNights.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultNumberOfNights.setFocusable(false);
        hotelResultNumberOfNights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelResultNumberOfNightsActionPerformed(evt);
            }
        });
        resultsContainerHotels.add(hotelResultNumberOfNights);

        hotelResultNumberOfGuestsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultNumberOfGuestsLabel.setText("Number of guests");
        resultsContainerHotels.add(hotelResultNumberOfGuestsLabel);

        hotelResultNumberOfGuests.setEditable(false);
        hotelResultNumberOfGuests.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultNumberOfGuests.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        hotelResultNumberOfGuests.setFocusable(false);
        resultsContainerHotels.add(hotelResultNumberOfGuests);

        hotelResultNumberOfRoomsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultNumberOfRoomsLabel.setText("Number of rooms");
        resultsContainerHotels.add(hotelResultNumberOfRoomsLabel);

        hotelResultNumberOfRooms.setEditable(false);
        hotelResultNumberOfRooms.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultNumberOfRooms.setFocusable(false);
        resultsContainerHotels.add(hotelResultNumberOfRooms);

        hotelResultPriceLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        hotelResultPriceLabel.setText("Total price ( EUR )");
        resultsContainerHotels.add(hotelResultPriceLabel);

        hotelResultPrice.setEditable(false);
        hotelResultPrice.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        hotelResultPrice.setFocusable(false);
        resultsContainerHotels.add(hotelResultPrice);

        resultsContainerDayTours.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        dayTourResultNameLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultNameLabel.setText("Name");
        resultsContainerDayTours.add(dayTourResultNameLabel);

        dayTourResultName.setEditable(false);
        dayTourResultName.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultName.setFocusable(false);
        resultsContainerDayTours.add(dayTourResultName);

        dayTourResultLocationLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultLocationLabel.setText("Location");
        resultsContainerDayTours.add(dayTourResultLocationLabel);

        dayTourResultLocation.setEditable(false);
        dayTourResultLocation.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultLocation.setFocusable(false);
        dayTourResultLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTourResultLocationActionPerformed(evt);
            }
        });
        resultsContainerDayTours.add(dayTourResultLocation);

        dayTourResultDepartureTimeLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultDepartureTimeLabel.setText("Departure time");
        resultsContainerDayTours.add(dayTourResultDepartureTimeLabel);

        dayTourResultDepartureTime.setEditable(false);
        dayTourResultDepartureTime.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultDepartureTime.setFocusable(false);
        resultsContainerDayTours.add(dayTourResultDepartureTime);

        dayTourResultDurationLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultDurationLabel.setText("Duration");
        resultsContainerDayTours.add(dayTourResultDurationLabel);

        dayTourResultDuration.setEditable(false);
        dayTourResultDuration.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultDuration.setFocusable(false);
        resultsContainerDayTours.add(dayTourResultDuration);

        dayTourResultNumberOfSeatsLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultNumberOfSeatsLabel.setText("Number of seats");
        resultsContainerDayTours.add(dayTourResultNumberOfSeatsLabel);

        dayTourResultNumberOfSeats.setEditable(false);
        dayTourResultNumberOfSeats.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultNumberOfSeats.setFocusable(false);
        resultsContainerDayTours.add(dayTourResultNumberOfSeats);

        dayTourResultPriceLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        dayTourResultPriceLabel.setText("Total price (ISK)");
        resultsContainerDayTours.add(dayTourResultPriceLabel);

        dayTourResultPrice.setEditable(false);
        dayTourResultPrice.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        dayTourResultPrice.setFocusable(false);
        resultsContainerDayTours.add(dayTourResultPrice);

        resultsContainerFlights.setLayout(new java.awt.GridLayout(0, 2, 10, 10));

        flightResultToLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightResultToLabel.setText("To");
        resultsContainerFlights.add(flightResultToLabel);

        flightResultTo.setEditable(false);
        flightResultTo.setFocusable(false);
        flightResultTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightResultToActionPerformed(evt);
            }
        });
        resultsContainerFlights.add(flightResultTo);

        flightResultFromLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightResultFromLabel.setText("From");
        resultsContainerFlights.add(flightResultFromLabel);

        flightResultFrom.setEditable(false);
        flightResultFrom.setFocusable(false);
        resultsContainerFlights.add(flightResultFrom);

        flightResultDateLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightResultDateLabel.setText("Date");
        resultsContainerFlights.add(flightResultDateLabel);

        flightResultDate.setEditable(false);
        flightResultDate.setFocusable(false);
        flightResultDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightResultDateActionPerformed(evt);
            }
        });
        resultsContainerFlights.add(flightResultDate);

        flightResultNumberLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightResultNumberLabel.setText("Flight number");
        resultsContainerFlights.add(flightResultNumberLabel);

        flightResultNumber.setEditable(false);
        flightResultNumber.setFocusable(false);
        flightResultNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightResultNumberActionPerformed(evt);
            }
        });
        resultsContainerFlights.add(flightResultNumber);

        flightResultPriceLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        flightResultPriceLabel.setText("Price ( ISK )");
        resultsContainerFlights.add(flightResultPriceLabel);

        flightResultPrice.setEditable(false);
        flightResultPrice.setFocusable(false);
        resultsContainerFlights.add(flightResultPrice);

        flightInfoLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 20)); // NOI18N
        flightInfoLabel.setText("Flight information");

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(resultsPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tripInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(resultsPanelLayout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(flightInfoLabel)))
                                .addGap(220, 220, 220)
                                .addComponent(hotelInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(329, 329, 329)
                                .addComponent(dayTourInfoLabel))
                            .addGroup(resultsPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(resultsContainerFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(resultsContainerHotels, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(resultsContainerDayTours, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(383, Short.MAX_VALUE))
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(resultsBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startPageButton)
                        .addGap(20, 20, 20))))
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGap(609, 609, 609)
                .addComponent(bookButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tripInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hotelInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayTourInfoLabel)
                    .addComponent(flightInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultsContainerHotels, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultsContainerDayTours, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(120, Short.MAX_VALUE))
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(resultsContainerFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultsBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))))
        );

        resultsBackButton.getAccessibleContext().setAccessibleName("resultsBackButton");

        mainPanel.add(resultsPanel, "card6");

        bookingNumberPanel.setBackground(new java.awt.Color(255, 255, 255));
        bookingNumberPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        bookingNumberLabel.setFont(new java.awt.Font("Microsoft YaHei", 0, 36)); // NOI18N
        bookingNumberLabel.setText("Your booking number");

        bookingNumber.setEditable(false);
        bookingNumber.setFont(new java.awt.Font("Microsoft YaHei", 0, 48)); // NOI18N
        bookingNumber.setFocusable(false);

        javax.swing.GroupLayout bookingNumberPanelLayout = new javax.swing.GroupLayout(bookingNumberPanel);
        bookingNumberPanel.setLayout(bookingNumberPanelLayout);
        bookingNumberPanelLayout.setHorizontalGroup(
            bookingNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingNumberPanelLayout.createSequentialGroup()
                .addContainerGap(872, Short.MAX_VALUE)
                .addGroup(bookingNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingNumberPanelLayout.createSequentialGroup()
                        .addComponent(bookingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(593, 593, 593))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingNumberPanelLayout.createSequentialGroup()
                        .addComponent(bookingNumberLabel)
                        .addGap(613, 613, 613))))
        );
        bookingNumberPanelLayout.setVerticalGroup(
            bookingNumberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingNumberPanelLayout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(bookingNumberLabel)
                .addGap(73, 73, 73)
                .addComponent(bookingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(293, Short.MAX_VALUE))
        );

        mainPanel.add(bookingNumberPanel, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1891, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void contButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contButton1ActionPerformed
        
        if(FlightCheckbox.isSelected()){
           flightPanel.setVisible(true);
           bookPanel.setVisible(false);
        }
        else if (HotelCheckbox.isSelected()){
            hotelPanel.setVisible(true);
            bookPanel.setVisible(false);
        }
        else if (DayToursCheckbox.isSelected()){
            dayToursPanel.setVisible(true);
            bookPanel.setVisible(false);
            PriceRadioButton.setSelected(true);
            
        }
        
        
        
    }//GEN-LAST:event_contButton1ActionPerformed

    private void DayToursCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayToursCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DayToursCheckboxActionPerformed

    private void FlightCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FlightCheckboxActionPerformed

    private void HotelCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HotelCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HotelCheckboxActionPerformed

    private void hotelContButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelContButtonActionPerformed
        if (DayToursCheckbox.isSelected()){
            dayToursPanel.setVisible(true);
            hotelPanel.setVisible(false);
            PriceRadioButton.setSelected(true);
        }    
        else {
            resultsPanel.setVisible(true);
            hotelPanel.setVisible(false);
        }
        int i = HotelsTable.getSelectedRow();
        hotelResultName.setText(logic.GetHotelData().getHotels()[i].getName());
        hotelResultPostal.setText(logic.GetHotelData().getHotels()[i].getPostalCode());
        hotelResultStars.setText(Integer.toString(logic.GetHotelData().getHotels()[i].getStars()));
        hotelResultDate.setText(arrivalDate.getText());
        hotelResultNumberOfNights.setText(Integer.toString(nights.getSelectedIndex()+1));
        hotelResultNumberOfRooms.setText(Integer.toString(onePers.getSelectedIndex() + twoPers.getSelectedIndex() + threePers.getSelectedIndex() + fourPers.getSelectedIndex()));
        hotelResultPrice.setText(Integer.toString((nights.getSelectedIndex()+1)*(onePers.getSelectedIndex() + 2*threePers.getSelectedIndex() + 3*twoPers.getSelectedIndex() + 4*fourPers.getSelectedIndex())
        		*logic.GetHotelData().getHotels()[i].getPrice()));
        hotelResultNumberOfGuests.setText(Integer.toString(onePers.getSelectedIndex() + 2*threePers.getSelectedIndex() + 3*twoPers.getSelectedIndex() + 4*fourPers.getSelectedIndex()));
        System.out.println(onePers.getSelectedIndex());
        System.out.println(twoPers.getSelectedItem());
        System.out.println(threePers.getSelectedIndex());
        System.out.println(fourPers.getSelectedIndex());
    }//GEN-LAST:event_hotelContButtonActionPerformed

    private void hotelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelBackButtonActionPerformed
        if(FlightCheckbox.isSelected()){
            flightPanel.setVisible(true);
            hotelPanel.setVisible(false);
            
        }
        else {
            resultsPanel.setVisible(true);
            hotelPanel.setVisible(false);
        }
        int i = HotelsTable.getSelectedRow();
        hotelResultName.setText(logic.GetHotelData().getHotels()[i].getName());
        hotelResultPostal.setText(logic.GetHotelData().getHotels()[i].getPostalCode());
        hotelResultStars.setText(Integer.toString(logic.GetHotelData().getHotels()[i].getStars()));
        hotelResultDate.setText(arrivalDate.getText());
        hotelResultNumberOfNights.setText(Integer.toString(nights.getSelectedIndex()));
        hotelResultNumberOfRooms.setText(Integer.toString(onePers.getSelectedIndex() + twoPers.getSelectedIndex() + threePers.getSelectedIndex() + fourPers.getSelectedIndex()));
        hotelResultPrice.setText(Integer.toString(logic.GetHotelData().getHotels()[i].getPrice()));
        hotelResultNumberOfGuests.setText(Integer.toString(onePers.getSelectedIndex() + 2*twoPers.getSelectedIndex() + 3*threePers.getSelectedIndex() + 4*fourPers.getSelectedIndex()));
        
        
        
    }//GEN-LAST:event_hotelBackButtonActionPerformed

    private void contButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contButton4ActionPerformed
        
    	
    	
        if(HotelCheckbox.isSelected()){
            hotelPanel.setVisible(true);
            flightPanel.setVisible(false);
             
        }
         else if (DayToursCheckbox.isSelected()){
            dayToursPanel.setVisible(true);
            bookPanel.setVisible(false);
            PriceRadioButton.setSelected(true);
            
        }
         else{
             
             flightPanel.setVisible(false);
             resultsPanel.setVisible(true);
         }
        int i = flightTable.getSelectedRow();
        flightResultFrom.setText(flightTo.getSelectedItem().toString());
        flightResultTo.setText(logic.GetFlightData().getFlight()[i].getDestination());
        flightResultDate.setText(logic.GetFlightData().getFlight()[i].getDate());
        flightResultNumber.setText(logic.GetFlightData().getFlight()[i].getFlightNr());
        flightResultPrice.setText(Double.toString(Math.round(logic.GetFlightData().getFlight()[i].getPrice())));
        
        
        
        
    }//GEN-LAST:event_contButton4ActionPerformed

    private void nightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nightsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nightsActionPerformed

    private void maxPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxPriceActionPerformed

    private void ageRestrictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageRestrictionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageRestrictionActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void AgeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeRadioButtonActionPerformed

    private void PriceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceRadioButtonActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void clearTable(JTable table){
        selectRows(table, 0, table.getRowCount());
        int rows[] = table.getSelectedRows();
        while(rows.length > 0){
            ((DefaultTableModel)table.getModel()).removeRow(table.convertRowIndexToModel(rows[0]));
            rows = table.getSelectedRows();
        }
        table.clearSelection();
    }
    
    private void selectRows(JTable table, int start, int end) {
        table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        table.setRowSelectionAllowed(true);
        table.setRowSelectionInterval(start, end - 1);
    }
    
    
    private void DayTourSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayTourSearchButtonActionPerformed
    	if(DayToursTable.getSelectedRow() != 0 ) {
    		clearTable(DayToursTable);
    	}
    	
         DayToursTable = emptyTable2;
         DefaultTableModel DayTourModel = (DefaultTableModel) DayToursTable.getModel();
         
         boolean[] check = new boolean[7];
         
         
         System.out.println(dayToursMinPrice.getText().isEmpty());
         if (PriceRadioButton.isSelected()) {
             if(dayToursMinPrice.getText().isEmpty()){
                 logic.GetDayToursData().setMinPrice(0);
             }
             else {
                 logic.GetDayToursData().setMinPrice(Integer.parseInt(dayToursMinPrice.getText()));
             }
             if(dayToursMaxPrice.getText().isEmpty()) {
                 logic.GetDayToursData().setMaxPrice(1000000);
             }
             else {
                 logic.GetDayToursData().setMaxPrice(Integer.parseInt(dayToursMaxPrice.getText()));
             }
             logic.GetDayToursData().setSearchBy(0);
             logic.DayTourSearch();
         }
         if (AgeRadioButton.isSelected()) {
             if (ageRestriction.getText().isEmpty()) {
                 logic.GetDayToursData().setAgeRestriction(100);
             }
             else {
                 logic.GetDayToursData().setAgeRestriction(Integer.parseInt(ageRestriction.getText()));
             }
             logic.GetDayToursData().setSearchBy(1);
             logic.DayTourSearch();
         }
         if (LocationRadioButton.isSelected()) {
                 logic.GetDayToursData().setLocation(dayToursLocation.getSelectedItem().toString());
             logic.GetDayToursData().setSearchBy(2);
             logic.DayTourSearch();
         }
         if (StarsRadioButton.isSelected()) {
             logic.GetDayToursData().setStars(minStars.getSelectedIndex());
             logic.GetDayToursData().setSearchBy(3);
             logic.DayTourSearch();
         }
         if (DepartureRadioButton.isSelected()) {
             if (dayToursDeparture.getText().isEmpty()) {
                 logic.GetDayToursData().setDepartureTime("18:30");
             }
             else {
                 logic.GetDayToursData().setDepartureTime(dayToursDeparture.getText());
             }
             
             logic.GetDayToursData().setSearchBy(4);
             logic.DayTourSearch();
         }
         if (SeatsRadioButton.isSelected()) {
             logic.GetDayToursData().setSeatsAvailable(seatsAvailable.getSelectedIndex());
             logic.GetDayToursData().setSearchBy(5);
             logic.DayTourSearch();
         }
         if (jRadioButton7.isSelected()) {
             check[0] = jCheckBox1.isSelected();
             check[1] = jCheckBox2.isSelected();
             check[2] = jCheckBox3.isSelected();
             check[3] = jCheckBox4.isSelected();
             check[4] = jCheckBox5.isSelected();
             check[5] = jCheckBox6.isSelected();
             check[6] = jCheckBox7.isSelected();
             logic.GetDayToursData().setDaysOfWeek(check);
             logic.GetDayToursData().setSearchBy(6);
             logic.DayTourSearch();
         }
         for(int i=0; i<25; i++) {
             if(i < logic.GetDayToursData().getTours().length) {
                 String name = logic.GetDayToursData().getTours()[i].getName();
                 String price = Integer.toString(logic.GetDayToursData().getTours()[i].getPrice());
                 String duration = logic.GetDayToursData().getTours()[i].getDuration();
                 String description = logic.GetDayToursData().getTours()[i].getDescription();
                 String[] rowData = new String[4];
                 rowData[0] = name;
                 rowData[1] = price;
                 rowData[2] = duration;
                 rowData[3] = description;
                 DayTourModel.addRow(rowData);
                 //System.out.println(Arrays.toString(rowData));
             }
         }
    }//GEN-LAST:event_DayTourSearchButtonActionPerformed

    public static String getBookingId() {
        StringBuilder randomString = new StringBuilder();
        Random random = new Random();

        String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        for(int i = 0; i < 6; i++) {
            randomString.append(alphabet.charAt(random.nextInt(alphabet.length())));
        }

        return randomString.toString();
    }
    
    private void flightSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	if(flightTable.getRowCount() != 0) {
    		clearTable(flightTable);
    	}
    	flightTable = emptyTable3;
    	DefaultTableModel FlightModel = (DefaultTableModel) flightTable.getModel();
    	
    	System.out.println(Double.parseDouble(flightsFromPrice.getSelectedItem().toString()));
    	
    	logic.FlightSearch(Double.parseDouble(flightsFromPrice.getSelectedItem().toString()), Double.parseDouble(flightsToPrice.getSelectedItem().toString()), flightDate.getSelectedItem().toString(), flightFrom.getSelectedItem().toString());
        
    	
    	for(int i=0; i < 25; i++) {
            if(i < logic.GetFlightData().getFlight().length) {
                String flightNo = logic.GetFlightData().getFlight()[i].getFlightNr();
                String from = flightFrom.getSelectedItem().toString();
                String to = logic.GetFlightData().getFlight()[i].getDestination();
                String date = logic.GetFlightData().getFlight()[i].getDate();
                String price = Double.toString(Math.round(logic.GetFlightData().getFlight()[i].getPrice()));
                String[] rowData = new String[5];
                rowData[0] = flightNo;
                rowData[1] = from;
                rowData[2] = to;
                rowData[3] = date;
                rowData[4] = price;
                FlightModel.addRow(rowData);
            }
        }
    	
    }
    
    
    private void hotelSearchButtonActionPerformed(java.awt.event.ActionEvent evt) throws NumberFormatException, ParseException, IOException {//GEN-FIRST:event_hotelSearchButtonActionPerformed
    	if(HotelsTable.getRowCount() != 0) {
    		clearTable(HotelsTable);
    	}
    	
        HotelsTable = emptyTable;
        DefaultTableModel HotelModel = (DefaultTableModel) HotelsTable.getModel(); 
        int[] arr = new int[4];
        arr[0] = onePers.getSelectedIndex();
        arr[1] = twoPers.getSelectedIndex();
        arr[2] = threePers.getSelectedIndex();
        arr[3] = fourPers.getSelectedIndex();
        if (maxPrice.getText().isEmpty()) {
            maxPrice.setText("-1");
        }
        logic.HotelSearch(hotelLocation.getText(), arrivalDate.getText(), hotelName.getText(), nights.getSelectedIndex(), stars.getSelectedIndex(), Integer.parseInt(maxPrice.getText()), arr);
        for(int i=0; i < 25; i++) {
            if(i < logic.GetHotelData().getHotels().length) {
                String name = logic.GetHotelData().getHotels()[i].getName();
                String stars = Integer.toString(logic.GetHotelData().getHotels()[i].getStars());
                String price = Integer.toString(logic.GetHotelData().getHotels()[i].getPrice());
                String postal = logic.GetHotelData().getHotels()[i].getPostalCode();
                String[] rowData = new String[4];
                rowData[0] = name;
                rowData[1] = stars;
                rowData[2] = price;
                rowData[3] = postal;
                HotelModel.addRow(rowData);
            }
        }
    }//GEN-LAST:event_hotelSearchButtonActionPerformed

    private void dayToursContButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayToursContButtonActionPerformed
        resultsPanel.setVisible(true);
        dayToursPanel.setVisible(false);
        int i = DayToursTable.getSelectedRow();
        dayTourResultName.setText(logic.GetDayToursData().getTours()[i].getName());
        dayTourResultLocation.setText(logic.GetDayToursData().getTours()[i].getLocation());
        dayTourResultDepartureTime.setText(logic.GetDayToursData().getTours()[i].getDepartureTime());
        dayTourResultDuration.setText(logic.GetDayToursData().getTours()[i].getDuration());
        dayTourResultNumberOfSeats.setText(Integer.toString(numberOfAdults.getSelectedIndex() + numberOfChildren.getSelectedIndex()));
        dayTourResultName.setText(logic.GetDayToursData().getTours()[i].getName());
        dayTourResultPrice.setText(Integer.toString((numberOfAdults.getSelectedIndex() + numberOfChildren.getSelectedIndex())*logic.GetDayToursData().getTours()[i].getPrice()));
        
    }//GEN-LAST:event_dayToursContButtonActionPerformed

    private void dayToursBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayToursBackButtonActionPerformed
        
         if(HotelCheckbox.isSelected()){
            hotelPanel.setVisible(true);
            dayToursPanel.setVisible(false);
             
        }
         else if (FlightCheckbox.isSelected()){
            flightPanel.setVisible(true);
            dayToursPanel.setVisible(false);
            
            
        }
        
    }//GEN-LAST:event_dayToursBackButtonActionPerformed

    private void hotelLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelLocationActionPerformed

    private void resultsBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsBackButtonActionPerformed

        if(DayToursCheckbox.isSelected()){
            dayToursPanel.setVisible(true);
            resultsPanel.setVisible(false);

        }
        else if(HotelCheckbox.isSelected()){
            hotelPanel.setVisible(true);
            resultsPanel.setVisible(false);

        }
        else if(FlightCheckbox.isSelected()){
            flightPanel.setVisible(true);
            resultsPanel.setVisible(false);
        }
    }//GEN-LAST:event_resultsBackButtonActionPerformed

    private void startPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPageButtonActionPerformed

        bookPanel.setVisible(true);
        resultsPanel.setVisible(false);

    }//GEN-LAST:event_startPageButtonActionPerformed

    private void dayTourResultLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTourResultLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayTourResultLocationActionPerformed

    private void numberOfAdultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfAdultsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfAdultsActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_bookButtonActionPerformed
        String bookNumber = getBookingId();
        int i = HotelsTable.getSelectedRow();
        int j = DayToursTable.getSelectedRow();
        bookingNumber.setText(bookNumber);
        if(HotelCheckbox.isSelected()) {
            logic.BookHotel(bookNumber, i);
        }
        if(DayToursCheckbox.isSelected()) {
            logic.BookDayTour(numberOfAdults.getSelectedIndex(), numberOfChildren.getSelectedIndex(), bookNumber, j);
        }
    	resultsPanel.setVisible(false);
        bookingNumberPanel.setVisible(true);
    }//GEN-LAST:event_bookButtonActionPerformed

    private void flightsToPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightsToPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightsToPriceActionPerformed

    private void hotelResultNumberOfNightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelResultNumberOfNightsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelResultNumberOfNightsActionPerformed

    private void hotelResultStarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelResultStarsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelResultStarsActionPerformed

    private void flightResultToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightResultToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightResultToActionPerformed

    private void flightResultDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightResultDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightResultDateActionPerformed

    private void flightResultNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightResultNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightResultNumberActionPerformed

    private void flightsBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightsBackButtonActionPerformed
        
        bookPanel.setVisible(true);
        flightPanel.setVisible(false);
        
    }//GEN-LAST:event_flightsBackButtonActionPerformed


    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AgeRadioButton;
    private javax.swing.JButton DayTourSearchButton;
    private javax.swing.JLabel DayTours;
    private javax.swing.JCheckBox DayToursCheckbox;
    private javax.swing.JTable DayToursTable;
    private javax.swing.JRadioButton DepartureRadioButton;
    private javax.swing.JCheckBox FlightCheckbox;
    private javax.swing.JLabel Flights;
    private javax.swing.JCheckBox HotelCheckbox;
    private javax.swing.JLabel Hotels;
    private javax.swing.JTable HotelsTable;
    private javax.swing.JRadioButton LocationRadioButton;
    private javax.swing.JRadioButton PriceRadioButton;
    private javax.swing.JLabel SearchQ;
    private javax.swing.JRadioButton SeatsRadioButton;
    private javax.swing.JRadioButton StarsRadioButton;
    private javax.swing.JTextField ageRestriction;
    private javax.swing.JTextField arrivalDate;
    private javax.swing.JLabel arrivalDateLabel;
    private javax.swing.JButton bookButton;
    private javax.swing.JPanel bookPanel;
    private javax.swing.JLayeredPane bookPanelContainer;
    private javax.swing.JTextField bookingNumber;
    private javax.swing.JLabel bookingNumberLabel;
    private javax.swing.JPanel bookingNumberPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton contButton1;
    private javax.swing.JButton contButton4;
    private javax.swing.JLabel dayTourInfoLabel;
    private javax.swing.JTextField dayTourResultDepartureTime;
    private javax.swing.JLabel dayTourResultDepartureTimeLabel;
    private javax.swing.JTextField dayTourResultDuration;
    private javax.swing.JLabel dayTourResultDurationLabel;
    private javax.swing.JTextField dayTourResultLocation;
    private javax.swing.JLabel dayTourResultLocationLabel;
    private javax.swing.JTextField dayTourResultName;
    private javax.swing.JLabel dayTourResultNameLabel;
    private javax.swing.JTextField dayTourResultNumberOfSeats;
    private javax.swing.JLabel dayTourResultNumberOfSeatsLabel;
    private javax.swing.JTextField dayTourResultPrice;
    private javax.swing.JLabel dayTourResultPriceLabel;
    private javax.swing.JButton dayToursBackButton;
    private javax.swing.JButton dayToursContButton;
    private javax.swing.JLayeredPane dayToursContainer1;
    private javax.swing.JLayeredPane dayToursContainer2;
    private javax.swing.JTextField dayToursDeparture;
    private javax.swing.JLabel dayToursLabel;
    private javax.swing.JComboBox dayToursLocation;
    private javax.swing.JTextField dayToursMaxPrice;
    private javax.swing.JTextField dayToursMinPrice;
    private javax.swing.JPanel dayToursPanel;
    private javax.swing.JScrollPane dayToursScrollPane;
    private javax.swing.JLayeredPane flightContainer;
    private javax.swing.JLabel flightDash;
    private javax.swing.JComboBox flightDate;
    private javax.swing.JLabel flightDateLabel;
    private javax.swing.JComboBox flightFrom;
    private javax.swing.JLabel flightFromLabel;
    private javax.swing.JLabel flightInfoLabel;
    private javax.swing.JLabel flightLabel;
    private javax.swing.JPanel flightPanel;
    private javax.swing.JTextField flightResultDate;
    private javax.swing.JLabel flightResultDateLabel;
    private javax.swing.JTextField flightResultFrom;
    private javax.swing.JLabel flightResultFromLabel;
    private javax.swing.JTextField flightResultNumber;
    private javax.swing.JLabel flightResultNumberLabel;
    private javax.swing.JTextField flightResultPrice;
    private javax.swing.JLabel flightResultPriceLabel;
    private javax.swing.JTextField flightResultTo;
    private javax.swing.JLabel flightResultToLabel;
    private javax.swing.JButton flightSearchButton;
    private javax.swing.JTable flightTable;
    private javax.swing.JComboBox flightTo;
    private javax.swing.JLabel flightToLabel;
    private javax.swing.JButton flightsBackButton;
    private javax.swing.JComboBox flightsFromPrice;
    private javax.swing.JLabel flightsPrice;
    private javax.swing.JScrollPane flightsScrollPane;
    private javax.swing.JComboBox flightsToPrice;
    private javax.swing.JComboBox fourPers;
    private javax.swing.JLabel fourPersLabel;
    private javax.swing.JLabel fromTo;
    private javax.swing.JButton hotelBackButton;
    private javax.swing.JButton hotelContButton;
    private javax.swing.JLabel hotelInfoLabel;
    private javax.swing.JLabel hotelLabel;
    private javax.swing.JTextField hotelLocation;
    private javax.swing.JTextField hotelName;
    private javax.swing.JLabel hotelNameLabel;
    private javax.swing.JPanel hotelPanel;
    private javax.swing.JTextField hotelResultDate;
    private javax.swing.JLabel hotelResultDateLabel;
    private javax.swing.JTextField hotelResultName;
    private javax.swing.JLabel hotelResultNameLabel;
    private javax.swing.JTextField hotelResultNumberOfGuests;
    private javax.swing.JLabel hotelResultNumberOfGuestsLabel;
    private javax.swing.JTextField hotelResultNumberOfNights;
    private javax.swing.JLabel hotelResultNumberOfNightsLabel;
    private javax.swing.JTextField hotelResultNumberOfRooms;
    private javax.swing.JLabel hotelResultNumberOfRoomsLabel;
    private javax.swing.JTextField hotelResultPostal;
    private javax.swing.JLabel hotelResultPostalLabel;
    private javax.swing.JTextField hotelResultPrice;
    private javax.swing.JLabel hotelResultPriceLabel;
    private javax.swing.JTextField hotelResultStars;
    private javax.swing.JLabel hotelResultStarsLabel;
    private javax.swing.JButton hotelSearchButton;
    private javax.swing.JLayeredPane hotelsContainer1;
    private javax.swing.JLayeredPane hotelsContainer2;
    private javax.swing.JScrollPane hotelsScrollPane;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField maxPrice;
    private javax.swing.JComboBox minStars;
    private javax.swing.JComboBox nights;
    private javax.swing.JLabel nightsLabel;
    private javax.swing.JComboBox numberOfAdults;
    private javax.swing.JLabel numberOfAdultsLabel;
    private javax.swing.JComboBox numberOfChildren;
    private javax.swing.JLabel numberOfChildrenPanel;
    private javax.swing.JComboBox onePers;
    private javax.swing.JLabel onePersLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton resultsBackButton;
    private javax.swing.JLayeredPane resultsContainerDayTours;
    private javax.swing.JLayeredPane resultsContainerFlights;
    private javax.swing.JLayeredPane resultsContainerHotels;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JComboBox seatsAvailable;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JComboBox stars;
    private javax.swing.JLabel starsLabel;
    private javax.swing.JButton startPageButton;
    private javax.swing.JComboBox threePers;
    private javax.swing.JLabel threePersLabel;
    private javax.swing.JLabel tripInfoLabel;
    private javax.swing.JComboBox twoPers;
    private javax.swing.JLabel twoPersLabel;
    private javax.swing.JTable emptyTable3;
    private javax.swing.JTable emptyTable;
    private javax.swing.JTable emptyTable2;
    // End of variables declaration//GEN-END:variables
}
